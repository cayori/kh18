javabean:	BoardDataBean, CommentDataBean

DAO:		BoardDBBean
			- BoardDBBean getInstance() : Singleton Pattern
			- Connection getConnection() : 
			- void insertArticle(BoardDataBean b) : writePro.jsp (게시물 입력)
			- int getArticleCount(): list.jsp (입력글의 갯수 리턴)
			- int getArticleCount(int n, String searchKeyword) : list.jsp 키워드로 검색된 글 갯수 리턴
			- List getArticles(int s, int e) : list.jsp (s부터 e 까지의 데이터 가져옴)
			- List getArticles(int s, int e, int n, String searchKeyword) : list.jsp (검색된 글의 s부터 e까지 가져옴)
			- BoardDataBean getArticle(int num) : content.jsp (글번의 해당하는 데이터 한줄을 가져옴)
			- BoardDataBean updateGetArticle(int num) : updateForm.jsp (수정하기 위한 데이터 한줄을 가져옴)
			= int updateArticle(BoardDataBean b) : updatePro.jsp (글수정)
			- int deleteArticle(int num, String passwd) : deletePro.jsp (글삭제)
			
			CommentDBBean
			- CommentDBBean getInstance() : Singleton Pattern
			- Connection getConnection() : 
			- void insertComment(CommentDataBean c) : contentPro.jsp (댓글입력)
			- List getComments(String content_num, int s, int e) : content.jsp (게시글 번호에 해당하는 s 부터 e 까지의 데이터 가져옴)
			- getCommentCount() : content.jsp (댓글의 입력갯수 가져옴)
			- deleteComment() : delCommentPro.jsp (댓글삭제)			
			
웹관련된 파일(/WebContent/board/)
			- color.jsp, style.css, script.js
			
			- 글입력 : writeForm.jsp =====> writePro.jsp
			                 
			- 리스트 : list.jsp[검색]
			
			- 글상세보기 : content.jsp
			- 댓글입력 : content.jsp  =====> contentPro.jsp
			- 댓글삭제 : content.jsp  =====> delCommentForm.jsp =====> delCommentPro.jsp
			- 글수정 : updateForm.jsp =====> updatePro.jsp
			- 글삭제 : deleteForm.jsp =====> deletePro.jsp  
			
			
* JSP 기초문법
* JDBC 프로그래밍
* 회원가입 + 로그인
	- 쿠키를 활용한 ID저장
	- ID 찾기 / 비밀번호 찾기
	- 회원리스트 (검색기능 추가)
* 게시판
	- 검색기능 추가
	- 댓글기능
* 로그인 여부에 따른 기능제한